# DO NOT EDIT THIS FILE
# This file is auto-generated by manifests/build_manifests.py
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  name: nvmeshes.nvmesh.excelero.com
spec:
  group: nvmesh.excelero.com
  names:
    kind: NVMesh
    listKind: NVMeshList
    plural: nvmeshes
    singular: nvmesh
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - jsonPath: .spec.core.version
      name: Core
      type: string
    - jsonPath: .spec.management.version
      name: Mgmt
      type: string
    - jsonPath: .spec.csi.version
      name: CSI
      type: string
    - jsonPath: .spec.core.tcpOnly
      name: TCP
      priority: 10
      type: boolean
    - jsonPath: .status.reconcileStatus.status
      name: Status
      priority: 10
      type: string
    - jsonPath: .status.reconcileStatus.status
      name: Reason
      priority: 10
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Represents a NVMesh Cluster
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: NVMeshSpec defines the desired state of NVMesh
            properties:
              actions:
                description: Initiate actions such as collecting logs
                items:
                  properties:
                    args:
                      additionalProperties:
                        type: string
                      description: Arguments for the Action
                      type: object
                    name:
                      description: The type of action to perform
                      enum:
                      - collect-logs
                      type: string
                  required:
                  - name
                  type: object
                type: array
              core:
                description: Controls deployment of NVMesh-Core components
                properties:
                  azureOptimized:
                    description: Azure Optimized - Make optimizations for running
                      on Azure cloud
                    type: boolean
                  configuredNICs:
                    description: ConfiguredNICs - a comma seperated list of nics to
                      use with NVMesh
                    type: string
                  disabled:
                    description: Disabled - if true NVMesh Core will not be deployed
                    type: boolean
                  excludeDrives:
                    description: Exclude NVMe Drives - Define which NVMe drives should
                      not be used by NVMesh
                    properties:
                      devicePaths:
                        description: A list of device paths that should not be used
                          by the NVMesh software, These devices will be excluded from
                          each node. i.e. /dev/nvme1n1
                        items:
                          type: string
                        type: array
                      serialNumbers:
                        description: A list of NVMe drive serial numbers that should
                          not be used by the NVMesh software. i.e. S3HCNX4K123456
                        items:
                          type: string
                        type: array
                    type: object
                  imageRegistry:
                    description: The address of the image registry where the nvmesh
                      core images are stored
                    type: string
                  imageVersionTag:
                    description: The version tag of the nvmesh core docker images
                    type: string
                  moduleParams:
                    type: string
                  tcpOnly:
                    description: TCP Only - Set to true if cluster support only TCP,
                      If false or omitted Infiniband is used
                    type: boolean
                  version:
                    description: The version of NVMesh Core to be deployed. to perform
                      an upgrade simply update this value to the required version.
                    type: string
                required:
                - version
                type: object
              csi:
                description: Controls deployment of NVMesh CSI Driver
                properties:
                  controllerReplicas:
                    description: The number of replicas for the NVMesh CSI Controller
                      Statefulset
                    format: int32
                    minimum: 1
                    type: integer
                  disabled:
                    description: If true NVMesh CSI Driver will not be deployed
                    type: boolean
                  imageRegistry:
                    description: Optional, if given will override the default image
                      registry
                    type: string
                  version:
                    description: The version of the NVMesh CSI Controller which will
                      be deployed. To perform an upgrade simply update this value
                      to the required version.
                    type: string
                required:
                - version
                type: object
              debug:
                description: Debug - debug options
                properties:
                  collectLogsJobsRunForever:
                    description: Makes logs collector job stay running for debugging
                    type: boolean
                  containersKeepRunningAfterFailure:
                    description: Prevent containers from exiting on each error causing
                      the pod to be restarted
                    type: boolean
                  debugJobs:
                    description: Adds additional debug prints to jobs for actions
                      and uninstall processes
                    type: boolean
                  imagePullPolicyAlways:
                    description: If true will try to pull all images even if they
                      exist locally. For use when the same image with the same tag
                      was updated
                    type: boolean
                type: object
              management:
                description: Controls deployment of NVMesh-Management
                properties:
                  backupsVolumeClaim:
                    description: Overrides fields in the Management Backups PVC
                    properties:
                      accessModes:
                        description: 'AccessModes contains the desired access modes
                          the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                        items:
                          type: string
                        type: array
                      dataSource:
                        description: 'This field can be used to specify either: *
                          An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                          * An existing PVC (PersistentVolumeClaim) If the provisioner
                          or an external controller can support the specified data
                          source, it will create a new volume based on the contents
                          of the specified data source. If the AnyVolumeDataSource
                          feature gate is enabled, this field will always have the
                          same contents as the DataSourceRef field.'
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being
                              referenced. If APIGroup is not specified, the specified
                              Kind must be in the core API group. For any other third-party
                              types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      dataSourceRef:
                        description: 'Specifies the object from which to populate
                          the volume with data, if a non-empty volume is desired.
                          This may be any local object from a non-empty API group
                          (non core object) or a PersistentVolumeClaim object. When
                          this field is specified, volume binding will only succeed
                          if the type of the specified object matches some installed
                          volume populator or dynamic provisioner. This field will
                          replace the functionality of the DataSource field and as
                          such if both fields are non-empty, they must have the same
                          value. For backwards compatibility, both fields (DataSource
                          and DataSourceRef) will be set to the same value automatically
                          if one of them is empty and the other is non-empty. There
                          are two important differences between DataSource and DataSourceRef:
                          * While DataSource only allows two specific types of objects,
                          DataSourceRef   allows any non-core object, as well as PersistentVolumeClaim
                          objects. * While DataSource ignores disallowed values (dropping
                          them), DataSourceRef   preserves all values, and generates
                          an error if a disallowed value is   specified. (Alpha) Using
                          this field requires the AnyVolumeDataSource feature gate
                          to be enabled.'
                        properties:
                          apiGroup:
                            description: APIGroup is the group for the resource being
                              referenced. If APIGroup is not specified, the specified
                              Kind must be in the core API group. For any other third-party
                              types, APIGroup is required.
                            type: string
                          kind:
                            description: Kind is the type of resource being referenced
                            type: string
                          name:
                            description: Name is the name of resource being referenced
                            type: string
                        required:
                        - kind
                        - name
                        type: object
                      resources:
                        description: 'Resources represents the minimum resources the
                          volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                        properties:
                          limits:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                          requests:
                            additionalProperties:
                              anyOf:
                              - type: integer
                              - type: string
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            description: 'Requests describes the minimum amount of
                              compute resources required. If Requests is omitted for
                              a container, it defaults to Limits if that is explicitly
                              specified, otherwise to an implementation-defined value.
                              More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                            type: object
                        type: object
                      selector:
                        description: A label query over volumes to consider for binding.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector
                              requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector
                                that contains values, a key, and an operator that
                                relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector
                                    applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn,
                                    Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values.
                                    If the operator is In or NotIn, the values array
                                    must be non-empty. If the operator is Exists or
                                    DoesNotExist, the values array must be empty.
                                    This array is replaced during a strategic merge
                                    patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs.
                              A single {key,value} in the matchLabels map is equivalent
                              to an element of matchExpressions, whose key field is
                              "key", the operator is "In", and the values array contains
                              only "value". The requirements are ANDed.
                            type: object
                        type: object
                      storageClassName:
                        description: 'Name of the StorageClass required by the claim.
                          More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                        type: string
                      volumeMode:
                        description: volumeMode defines what type of volume is required
                          by the claim. Value of Filesystem is implied when not included
                          in claim spec.
                        type: string
                      volumeName:
                        description: VolumeName is the binding reference to the PersistentVolume
                          backing this claim.
                        type: string
                    type: object
                  disableAutoEvictDrives:
                    description: Disable Auto-Evict Missing NVMe drives - This enables
                      NVMesh to auto-rebuild volumes when drives were replaced (for
                      example on the cloud after a machine was restarted)
                    type: boolean
                  disableAutoFormatDrives:
                    description: Disable Auto-Format NVMe drives as they are discovered
                    type: boolean
                  disabled:
                    description: Disabled - if true NVMesh Management will not be
                      deployed
                    type: boolean
                  externalIPs:
                    description: The ExternalIP that will be used for the management
                      GUI service LoadBalancer
                    items:
                      type: string
                    type: array
                  imageRegistry:
                    description: The address of the image registry where the nvmesh
                      management image is stored
                    type: string
                  mongoDB:
                    description: Configuration for deploying a MongoDB cluster"
                    properties:
                      address:
                        description: The MongoDB connection string i.e "mongo-0.mongo.nvmesh.svc.local:27017"
                        type: string
                      dataVolumeClaim:
                        description: Overrides fields in the MongoDB data PVC
                        properties:
                          accessModes:
                            description: 'AccessModes contains the desired access
                              modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                            items:
                              type: string
                            type: array
                          dataSource:
                            description: 'This field can be used to specify either:
                              * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot)
                              * An existing PVC (PersistentVolumeClaim) If the provisioner
                              or an external controller can support the specified
                              data source, it will create a new volume based on the
                              contents of the specified data source. If the AnyVolumeDataSource
                              feature gate is enabled, this field will always have
                              the same contents as the DataSourceRef field.'
                            properties:
                              apiGroup:
                                description: APIGroup is the group for the resource
                                  being referenced. If APIGroup is not specified,
                                  the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          dataSourceRef:
                            description: 'Specifies the object from which to populate
                              the volume with data, if a non-empty volume is desired.
                              This may be any local object from a non-empty API group
                              (non core object) or a PersistentVolumeClaim object.
                              When this field is specified, volume binding will only
                              succeed if the type of the specified object matches
                              some installed volume populator or dynamic provisioner.
                              This field will replace the functionality of the DataSource
                              field and as such if both fields are non-empty, they
                              must have the same value. For backwards compatibility,
                              both fields (DataSource and DataSourceRef) will be set
                              to the same value automatically if one of them is empty
                              and the other is non-empty. There are two important
                              differences between DataSource and DataSourceRef: *
                              While DataSource only allows two specific types of objects,
                              DataSourceRef   allows any non-core object, as well
                              as PersistentVolumeClaim objects. * While DataSource
                              ignores disallowed values (dropping them), DataSourceRef   preserves
                              all values, and generates an error if a disallowed value
                              is   specified. (Alpha) Using this field requires the
                              AnyVolumeDataSource feature gate to be enabled.'
                            properties:
                              apiGroup:
                                description: APIGroup is the group for the resource
                                  being referenced. If APIGroup is not specified,
                                  the specified Kind must be in the core API group.
                                  For any other third-party types, APIGroup is required.
                                type: string
                              kind:
                                description: Kind is the type of resource being referenced
                                type: string
                              name:
                                description: Name is the name of resource being referenced
                                type: string
                            required:
                            - kind
                            - name
                            type: object
                          resources:
                            description: 'Resources represents the minimum resources
                              the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                            properties:
                              limits:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Limits describes the maximum amount
                                  of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                              requests:
                                additionalProperties:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                  x-kubernetes-int-or-string: true
                                description: 'Requests describes the minimum amount
                                  of compute resources required. If Requests is omitted
                                  for a container, it defaults to Limits if that is
                                  explicitly specified, otherwise to an implementation-defined
                                  value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                                type: object
                            type: object
                          selector:
                            description: A label query over volumes to consider for
                              binding.
                            properties:
                              matchExpressions:
                                description: matchExpressions is a list of label selector
                                  requirements. The requirements are ANDed.
                                items:
                                  description: A label selector requirement is a selector
                                    that contains values, a key, and an operator that
                                    relates the key and values.
                                  properties:
                                    key:
                                      description: key is the label key that the selector
                                        applies to.
                                      type: string
                                    operator:
                                      description: operator represents a key's relationship
                                        to a set of values. Valid operators are In,
                                        NotIn, Exists and DoesNotExist.
                                      type: string
                                    values:
                                      description: values is an array of string values.
                                        If the operator is In or NotIn, the values
                                        array must be non-empty. If the operator is
                                        Exists or DoesNotExist, the values array must
                                        be empty. This array is replaced during a
                                        strategic merge patch.
                                      items:
                                        type: string
                                      type: array
                                  required:
                                  - key
                                  - operator
                                  type: object
                                type: array
                              matchLabels:
                                additionalProperties:
                                  type: string
                                description: matchLabels is a map of {key,value} pairs.
                                  A single {key,value} in the matchLabels map is equivalent
                                  to an element of matchExpressions, whose key field
                                  is "key", the operator is "In", and the values array
                                  contains only "value". The requirements are ANDed.
                                type: object
                            type: object
                          storageClassName:
                            description: 'Name of the StorageClass required by the
                              claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                            type: string
                          volumeMode:
                            description: volumeMode defines what type of volume is
                              required by the claim. Value of Filesystem is implied
                              when not included in claim spec.
                            type: string
                          volumeName:
                            description: VolumeName is the binding reference to the
                              PersistentVolume backing this claim.
                            type: string
                        type: object
                      external:
                        description: External - if true MongoDB is expected to be
                          already deployed, and MongoAddress should be given, if false
                          - MongoDB will be automatically deployed
                        type: boolean
                    type: object
                  noSSL:
                    description: Disable TLS/SSL on NVMesh-Management websocket and
                      HTTP connections
                    type: boolean
                  replicas:
                    description: The number of replicas of the NVMesh Managemnet
                    format: int32
                    minimum: 1
                    type: integer
                  version:
                    description: The version of NVMesh Management to be deployed.
                      to perform an upgrade simply update this value to the required
                      version.
                    type: string
                required:
                - version
                type: object
              operator:
                description: Control the behavior of the NVMesh operator for this
                  NVMesh Cluster
                properties:
                  fileServer:
                    description: Override the default file server for compiled binaries
                    properties:
                      address:
                        description: The url address of the binaries file server
                        type: string
                      skipCheckCertificate:
                        description: Allows to connect to a self signed https server
                        type: boolean
                    type: object
                  ignorePersistentVolumesOnDelete:
                    description: If IgnorePersistentVolumesOnDelete is true, The operator
                      will allow deleting this cluster when there are NVMesh PersistentVolumes
                      on the cluster. This can lead to an unclean state left on the
                      k8s cluster
                    type: boolean
                  ignoreVolumeAttachmentOnDelete:
                    description: If IgnoreVolumeAttachmentOnDelete is true, The operator
                      will allow deleting this cluster when there are active attachments
                      of NVMesh volumes. This can lead to an unclean state left on
                      the k8s cluster
                    type: boolean
                  skipUninstall:
                    description: If SkipUninstall is true, The operator will not clear
                      the mongo db or remove files the NVMesh software has saved locally
                      on the nodes. This can lead to an unclean state left on the
                      k8s cluster
                    type: boolean
                type: object
            required:
            - core
            - csi
            - management
            type: object
          status:
            description: NVMeshStatus defines the observed state of NVMesh
            properties:
              WebUIURL:
                description: The URL of NVMesh Web GUI
                type: string
              actionsStatus:
                additionalProperties:
                  additionalProperties:
                    type: string
                  type: object
                type: object
              reconcileStatus:
                properties:
                  lastUpdate:
                    format: date-time
                    type: string
                  reason:
                    type: string
                  status:
                    type: string
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ''
    plural: ''
  conditions: []
  storedVersions: []
---
apiVersion: v1
imagePullSecrets:
- excelero-registry-cred
kind: ServiceAccount
metadata:
  name: nvmesh-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nvmesh-operator-role
rules:
- apiGroups:
  - ''
  resources:
  - pods
  - services
  - services/finalizers
  - serviceaccounts
  - endpoints
  - persistentvolumeclaims
  - persistentvolumes
  - events
  - configmaps
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ''
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ''
  resources:
  - persistentvolumeclaims/status
  verbs:
  - update
  - patch
- apiGroups:
  - apps
  resources:
  - deployments
  - daemonsets
  - replicasets
  - statefulsets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  - rolebindings
  - clusterroles
  - clusterrolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - csidrivers
  - storageclasses
  - csinodes
  - volumeattachments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - volumesnapshotcontents
  - volumesnapshots
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - security.openshift.io
  resourceNames:
  - privileged
  resources:
  - securitycontextconstraints
  verbs:
  - use
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - nvmesh.excelero.com
  resources:
  - nvmeshes
  - nvmeshes/finalizers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - nvmesh.excelero.com
  resources:
  - nvmeshes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs:
  - get
  - create
- apiGroups:
  - apps
  resourceNames:
  - mongodb-kubernetes-operator
  resources:
  - deployments/finalizers
  verbs:
  - update
- apiGroups:
  - ''
  resources:
  - pods
  verbs:
  - get
- apiGroups:
  - apps
  resources:
  - replicasets
  - deployments
  verbs:
  - get
- apiGroups:
  - mongodb.com
  resources:
  - '*'
  - mongodbs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  - extensions
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nvmesh-operator-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nvmesh-operator-role
subjects:
- kind: ServiceAccount
  name: nvmesh-operator
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: nvmesh-operator
  name: nvmesh-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nvmesh-operator
  template:
    metadata:
      labels:
        app: nvmesh-operator
    spec:
      containers:
      - args:
        - --enable-leader-election
        command:
        - /manager
        image: excelero/nvmesh-operator:0.8.0-20
        name: controller
        resources:
          limits:
            cpu: 100m
            memory: 500Mi
          requests:
            cpu: 100m
            memory: 100Mi
      serviceAccountName: nvmesh-operator
      terminationGracePeriodSeconds: 10
