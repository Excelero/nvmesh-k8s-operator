
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: nvmeshes.nvmesh.excelero.com
spec:
  group: nvmesh.excelero.com
  names:
    kind: NVMesh
    listKind: NVMeshList
    plural: nvmeshes
    singular: nvmesh
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: NVMesh is the Schema for the nvmeshes API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: NVMeshSpec defines the desired state of NVMesh
          properties:
            core:
              description: Core is an object describing the nvmesh-core deployment
              properties:
                deploy:
                  description: Deploy controls wether to deploy NVMesh Core
                  type: boolean
                imageRegistry:
                  description: The address of the image registry where the nvmesh
                    core images are stored
                  type: string
                version:
                  description: The version of NVMesh Core to be deployed. to perform
                    an upgrade simply update this value to the required version.
                  type: string
              required:
              - imageRegistry
              - version
              type: object
            csi:
              description: CSI is an object describing the nvmesh-csi-driver deployment
              properties:
                controllerReplicas:
                  description: ControllerReplicas describes the number of replicas
                    for the NVMesh CSI Controller Statefulset
                  format: int32
                  minimum: 1
                  type: integer
                deploy:
                  description: Deploy controls wether the NVMesh CSI Driver should
                    be deployed or not
                  type: boolean
                imageName:
                  description: ImageName - Optional, if given will override the default
                    repositroy/image-name
                  type: string
                version:
                  description: Version controls which version of the NVMesh CSI Controller
                    will be deployed. to perform an upgrade simply update this value
                    to the required version.
                  type: string
              type: object
            management:
              description: Management is an object describing the nvmesh-management
                deployment
              properties:
                deploy:
                  description: Deploy controls wether to deploy NVMesh Management
                  type: boolean
                externalIPs:
                  description: The ExternalIP that will be used for the management
                    GUI service LoadBalancer
                  items:
                    type: string
                  type: array
                imageRegistry:
                  description: The address of the image registry where the nvmesh
                    management image is stored
                  type: string
                mongoAddress:
                  description: The MongoDB connection string i.e "mongo-0.mongo.nvmesh.svc.local:27017"
                  type: string
                mongoDB:
                  description: Configuration for deploying a MongoDB cluster"
                  properties:
                    deploy:
                      description: Deploy MongoDB for NVMesh Management, if this is
                        true a MongoDB cluster will automatically be deployed. If
                        this is false the Management server will try to connect to
                        an external MongoDB cluster using the address defined NVMesh.Spec.Management.MongoAddress
                      type: boolean
                  type: object
                replicas:
                  description: The number of replicas of the NVMesh Managemnet
                  format: int32
                  minimum: 1
                  type: integer
                useSSL:
                  description: Wether the management should a secure TLS/SSL connection
                    on websocket and HTTP connections
                  type: boolean
                version:
                  description: The version of NVMesh Management to be deployed. to
                    perform an upgrade simply update this value to the required version.
                  type: string
              required:
              - imageRegistry
              type: object
            operator:
              description: Control the behavior of the NVMesh operator for this NVMesh
                Cluster
              properties:
                ignorePersistentVolumesOnDelete:
                  description: If IgnorePersistentVolumesOnDelete is true, The operator
                    will allow deleting this cluster when there are NVMesh PersistentVolumes
                    on the cluster. This can lead to an unclean state left on the
                    k8s cluster
                  type: boolean
                ignoreVolumeAttachmentOnDelete:
                  description: If IgnoreVolumeAttachmentOnDelete is true, The operator
                    will allow deleting this cluster when there are active attachments
                    of NVMesh volumes. This can lead to an unclean state left on the
                    k8s cluster
                  type: boolean
              type: object
          type: object
        status:
          description: NVMeshStatus defines the observed state of NVMesh
          properties:
            WebUIURL:
              description: The URL of NVMesh Web GUI
              type: string
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
