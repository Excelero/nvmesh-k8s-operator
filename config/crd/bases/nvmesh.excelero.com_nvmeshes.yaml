
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: nvmeshes.nvmesh.excelero.com
spec:
  additionalPrinterColumns:
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  - JSONPath: .spec.core.version
    name: Core
    type: string
  - JSONPath: .spec.management.version
    name: Mgmt
    type: string
  - JSONPath: .spec.csi.version
    name: CSI
    type: string
  - JSONPath: .spec.core.tcpOnly
    name: TCP
    priority: 10
    type: boolean
  - JSONPath: .status.reconcileStatus.status
    name: Status
    priority: 10
    type: string
  - JSONPath: .status.reconcileStatus.status
    name: Reason
    priority: 10
    type: string
  group: nvmesh.excelero.com
  names:
    kind: NVMesh
    listKind: NVMeshList
    plural: nvmeshes
    singular: nvmesh
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: NVMesh is the Schema for the nvmeshes API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: NVMeshSpec defines the desired state of NVMesh
          properties:
            actions:
              description: Actions allow the user to initiate tasks for the operator to perform
              items:
                properties:
                  args:
                    additionalProperties:
                      type: string
                    description: Arguments for the Action
                    type: object
                  name:
                    description: The type of action to perform
                    enum:
                    - collect-logs
                    type: string
                type: object
              type: array
            core:
              description: Core is an object describing the nvmesh-core deployment
              properties:
                azureOptimized:
                  description: Azure Optimized - Make optimizations for running on Azure cloud
                  type: boolean
                configuredNICs:
                  description: ConfiguredNICs - a comma seperated list of nics to use with NVMesh
                  type: string
                disabled:
                  description: Disabled - if true NVMesh Core will not be deployed
                  type: boolean
                excludeDrives:
                  description: Exclude NVMe Drives - Define which NVMe drives should not be used by NVMesh
                  properties:
                    devicePaths:
                      description: A list of device paths that should not be used by the NVMesh software, These devices will be excluded from each node. i.e. /dev/nvme1n1
                      items:
                        type: string
                      type: array
                    serialNumbers:
                      description: A list of NVMe drive serial numbers that should not be used by the NVMesh software. i.e. S3HCNX4K123456
                      items:
                        type: string
                      type: array
                  type: object
                imageRegistry:
                  description: The address of the image registry where the nvmesh core images are stored
                  type: string
                imageVersionTag:
                  description: The version tag of the nvmesh core docker images
                  type: string
                tcpOnly:
                  description: TCP Only - Set to true if cluster support only TCP, If false or omitted Infiniband is used
                  type: boolean
                version:
                  description: The version of NVMesh Core to be deployed. to perform an upgrade simply update this value to the required version.
                  type: string
              required:
              - version
              type: object
            csi:
              description: CSI is an object describing the nvmesh-csi-driver deployment
              properties:
                controllerReplicas:
                  description: ControllerReplicas describes the number of replicas for the NVMesh CSI Controller Statefulset
                  format: int32
                  minimum: 1
                  type: integer
                disabled:
                  description: Disabled - if true NVMesh CSI Driver will not be deployed
                  type: boolean
                imageName:
                  description: ImageName - Optional, if given will override the default repositroy/image-name
                  type: string
                version:
                  description: Version controls which version of the NVMesh CSI Controller will be deployed. to perform an upgrade simply update this value to the required version.
                  type: string
              type: object
            debug:
              description: Debug - debug options
              properties:
                collectLogsJobsRunForever:
                  type: boolean
                containersKeepRunningAfterFailure:
                  type: boolean
                debugJobs:
                  type: boolean
                imagePullPolicyAlways:
                  type: boolean
              type: object
            management:
              description: Management is an object describing the nvmesh-management deployment
              properties:
                backupsVolumeClaim:
                  description: Overrides fields in the Management Backups PVC
                  properties:
                    accessModes:
                      description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                      items:
                        type: string
                      type: array
                    dataSource:
                      description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.'
                      properties:
                        apiGroup:
                          description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                          type: string
                        kind:
                          description: Kind is the type of resource being referenced
                          type: string
                        name:
                          description: Name is the name of resource being referenced
                          type: string
                      required:
                      - kind
                      - name
                      type: object
                    resources:
                      description: 'Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                      properties:
                        limits:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                        requests:
                          additionalProperties:
                            anyOf:
                            - type: integer
                            - type: string
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                          type: object
                      type: object
                    selector:
                      description: A label query over volumes to consider for binding.
                      properties:
                        matchExpressions:
                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                          items:
                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector applies to.
                                type: string
                              operator:
                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                items:
                                  type: string
                                type: array
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                    storageClassName:
                      description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                      type: string
                    volumeMode:
                      description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                      type: string
                    volumeName:
                      description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                      type: string
                  type: object
                disabled:
                  description: Disabled - if true NVMesh Management will not be deployed
                  type: boolean
                externalIPs:
                  description: The ExternalIP that will be used for the management GUI service LoadBalancer
                  items:
                    type: string
                  type: array
                imageRegistry:
                  description: The address of the image registry where the nvmesh management image is stored
                  type: string
                mongoDB:
                  description: Configuration for deploying a MongoDB cluster"
                  properties:
                    address:
                      description: The MongoDB connection string i.e "mongo-0.mongo.nvmesh.svc.local:27017"
                      type: string
                    dataVolumeClaim:
                      description: Overrides fields in the MongoDB data PVC
                      properties:
                        accessModes:
                          description: 'AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                          items:
                            type: string
                          type: array
                        dataSource:
                          description: 'This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot - Beta) * An existing PVC (PersistentVolumeClaim) * An existing custom resource/object that implements data population (Alpha) In order to use VolumeSnapshot object types, the appropriate feature gate must be enabled (VolumeSnapshotDataSource or AnyVolumeDataSource) If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source. If the specified data source is not supported, the volume will not be created and the failure will be reported as an event. In the future, we plan to support more data source types and the behavior of the provisioner may change.'
                          properties:
                            apiGroup:
                              description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                              type: string
                            kind:
                              description: Kind is the type of resource being referenced
                              type: string
                            name:
                              description: Name is the name of resource being referenced
                              type: string
                          required:
                          - kind
                          - name
                          type: object
                        resources:
                          description: 'Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources'
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                - type: integer
                                - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: 'Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                          type: object
                        selector:
                          description: A label query over volumes to consider for binding.
                          properties:
                            matchExpressions:
                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                              items:
                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                properties:
                                  key:
                                    description: key is the label key that the selector applies to.
                                    type: string
                                  operator:
                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                    type: string
                                  values:
                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - key
                                - operator
                                type: object
                              type: array
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                              type: object
                          type: object
                        storageClassName:
                          description: 'Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                          type: string
                        volumeMode:
                          description: volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
                          type: string
                        volumeName:
                          description: VolumeName is the binding reference to the PersistentVolume backing this claim.
                          type: string
                      type: object
                    external:
                      description: External - if true MongoDB is expected to be already deployed, and MongoAddress should be given, if false - MongoDB will be automatically deployed
                      type: boolean
                    replicas:
                      description: The number of MongoDB replicas in the MongoDB Cluster - This field is ignored if management.mongoDB.external=true
                      format: int32
                      type: integer
                    useOperator:
                      description: If true the NVMesh Operator will deploy a MongoDB Operator and a MongoDB Cluster using a CustomResource
                      type: boolean
                  type: object
                noSSL:
                  description: Disable TLS/SSL on NVMesh-Management websocket and HTTP connections
                  type: boolean
                replicas:
                  description: The number of replicas of the NVMesh Managemnet
                  format: int32
                  minimum: 1
                  type: integer
                version:
                  description: The version of NVMesh Management to be deployed. to perform an upgrade simply update this value to the required version.
                  type: string
              type: object
            operator:
              description: Control the behavior of the NVMesh operator for this NVMesh Cluster
              properties:
                fileServer:
                  description: Override the default file server for compiled binaries
                  properties:
                    address:
                      type: string
                    skipCheckCertificate:
                      type: boolean
                  type: object
                ignorePersistentVolumesOnDelete:
                  description: If IgnorePersistentVolumesOnDelete is true, The operator will allow deleting this cluster when there are NVMesh PersistentVolumes on the cluster. This can lead to an unclean state left on the k8s cluster
                  type: boolean
                ignoreVolumeAttachmentOnDelete:
                  description: If IgnoreVolumeAttachmentOnDelete is true, The operator will allow deleting this cluster when there are active attachments of NVMesh volumes. This can lead to an unclean state left on the k8s cluster
                  type: boolean
                skipUninstall:
                  description: If SkipUninstall is true, The operator will not clear the mongo db or remove files the NVMesh software has saved locally on the nodes. This can lead to an unclean state left on the k8s cluster
                  type: boolean
              type: object
          type: object
        status:
          description: NVMeshStatus defines the observed state of NVMesh
          properties:
            WebUIURL:
              description: The URL of NVMesh Web GUI
              type: string
            actionsStatus:
              additionalProperties:
                additionalProperties:
                  type: string
                type: object
              type: object
            reconcileStatus:
              properties:
                lastUpdate:
                  format: date-time
                  type: string
                reason:
                  type: string
                status:
                  type: string
              type: object
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
